CREATE DATABASE Library;
USE Library;
CREATE TABLE users (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    phone_number VARCHAR(20) NOT NULL UNIQUE,
    `password` VARCHAR(255) NOT NULL,
    user_name VARCHAR(50) NOT NULL,
    registration_time DATETIME NOT NULL DEFAULT NOW(),
    last_login_time DATETIME DEFAULT NULL
);

CREATE TABLE books (
    isbn VARCHAR(13) PRIMARY KEY,
    `name` VARCHAR(100) NOT NULL,
    author VARCHAR(50) NOT NULL,
    introduction TEXT
);

CREATE TABLE inventory (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    isbn VARCHAR(13) NOT NULL,
    store_time DATETIME NOT NULL DEFAULT NOW(),
    `status` ENUM('AVAILABLE', 'BORROWED', 'REPAIRING', 'LOST', 'DAMAGED', 'DISCARDED')
        NOT NULL DEFAULT 'AVAILABLE',
	FOREIGN KEY (isbn) REFERENCES books(isbn) ON DELETE CASCADE
);

CREATE TABLE borrowing_records (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    inventory_id BIGINT NOT NULL,
    borrowing_time DATETIME NOT NULL DEFAULT NOW(),
    return_time DATETIME DEFAULT NULL,
	FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
	FOREIGN KEY (inventory_id) REFERENCES inventory(id) ON DELETE CASCADE
);

CREATE INDEX idx_user_id ON borrowing_records(user_id);
CREATE INDEX idx_user_id ON borrowing_records(inventory_id);

DELIMITER //

CREATE PROCEDURE find_User_By_Phone_Number (IN phone VARCHAR(20))
BEGIN
    SELECT * FROM users WHERE phone_number = phone;
END //

DELIMITER ;

DELIMITER //
CREATE PROCEDURE exists_User_By_Phone_Number (IN phone VARCHAR(20), OUT result BOOLEAN)
BEGIN
    SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END
    INTO result
    FROM users
    WHERE phone_number = phone;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE find_Book_By_Name (IN bookName VARCHAR(100))
BEGIN
    SELECT * FROM books WHERE `name` LIKE CONCAT('%', bookName, '%');
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE find_Book_By_Isbn (IN Isbn VARCHAR(13))
BEGIN
    SELECT * FROM books WHERE isbn = Isbn;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE find_Inventory_By_Isbn (IN inventoryIsbn VARCHAR(13))
BEGIN
    SELECT * FROM inventory WHERE `isbn` = inventoryIsbn;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE exists_Inventory_By_Isbn (IN inventoryIsbn VARCHAR(13), OUT result BOOLEAN)
BEGIN
    SELECT CASE WHEN COUNT(*) = 0 THEN false ELSE true END
    INTO result FROM inventory
    WHERE isbn = inventoryIsbn;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE find_Record_By_Inventory (IN inventoryId BIGINT)
BEGIN
    SELECT * FROM borrowing_records br
    JOIN inventory i ON br.inventory_id = i.id
    WHERE `inventory_id` = inventoryId AND return_time IS NULL;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE find_Record_By_User (IN userId BIGINT)
BEGIN
    SELECT * FROM borrowing_records br
    JOIN users us ON br.user_id = us.id
    WHERE `user_id` = userId;
END //
DELIMITER ;